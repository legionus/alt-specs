# REMOVE ME (I was set for NMU) and uncomment real Release tags:
Release: alt2.1.1
%define oname zc.intid

%def_with python3

Name: python-module-%oname
Version: 1.0.1
#Release: alt2.1
Summary: Reduced-conflict Integer Id Utility
License: ZPLv2.1
Group: Development/Python
Url: http://pypi.python.org/pypi/zc.intid/
Packager: Eugeny A. Rostovtsev (REAL) <real at altlinux.org>

Source: %name-%version.tar

BuildPreReq: python-devel python-module-setuptools
%if_with python3
BuildRequires(pre): rpm-build-python3
BuildPreReq: python3-devel python3-module-setuptools
BuildPreReq: python-tools-2to3
%endif

%py_requires ZODB3 zope.component zope.event zope.interface zope.security

%description
This package provides an API to create integer ids for any object.
Objects can later be looked up by their id as well. This functionality
is commonly used in situations where dealing with objects is
undesirable, such as in search indices or any code that needs an easy
hash of an object.

This is similar to the zope.intid package, but with two distinct
advantages:

* Induces fewer conflict errors, since object ids are not used as part
  of the stored data. The id for an object is stored in an attribute of
  the object itself, with the attribute name being configured by the
  construction of the id utility.

  This does require that the object "play nice" with this approach. At a
  minimum, the attributes used to store ids on objects should
  * persist with the rest of the object's state, and
  * not be modified by the object.

* Fewer dependencies.

Events generated on the assignment and removal of ids are generated by
the register and unregister methods rather than by the callers of those
methods.

%package -n python3-module-%oname
Summary: Reduced-conflict Integer Id Utility
Group: Development/Python3
%py3_requires ZODB3 zope.component zope.event zope.interface zope.security

%description -n python3-module-%oname
This package provides an API to create integer ids for any object.
Objects can later be looked up by their id as well. This functionality
is commonly used in situations where dealing with objects is
undesirable, such as in search indices or any code that needs an easy
hash of an object.

This is similar to the zope.intid package, but with two distinct
advantages:

* Induces fewer conflict errors, since object ids are not used as part
  of the stored data. The id for an object is stored in an attribute of
  the object itself, with the attribute name being configured by the
  construction of the id utility.

  This does require that the object "play nice" with this approach. At a
  minimum, the attributes used to store ids on objects should
  * persist with the rest of the object's state, and
  * not be modified by the object.

* Fewer dependencies.

Events generated on the assignment and removal of ids are generated by
the register and unregister methods rather than by the callers of those
methods.

%package -n python3-module-%oname-tests
Summary: Tests for zc.intid
Group: Development/Python3
Requires: python3-module-%oname = %version-%release

%description -n python3-module-%oname-tests
This package provides an API to create integer ids for any object.
Objects can later be looked up by their id as well. This functionality
is commonly used in situations where dealing with objects is
undesirable, such as in search indices or any code that needs an easy
hash of an object.

This package contains tests for zc.intid.

%package tests
Summary: Tests for zc.intid
Group: Development/Python
Requires: %name = %version-%release

%description tests
This package provides an API to create integer ids for any object.
Objects can later be looked up by their id as well. This functionality
is commonly used in situations where dealing with objects is
undesirable, such as in search indices or any code that needs an easy
hash of an object.

This package contains tests for zc.intid.

%prep
%setup

%if_with python3
cp -fR . ../python3
find ../python3 -type f -name '*.py' -exec 2to3 -w -n '{}' +
%endif

%build
%python_build

%if_with python3
pushd ../python3
%python3_build
popd
%endif

%install
%python_install
%if "%python_sitelibdir_noarch" != "%python_sitelibdir"
install -d %buildroot%python_sitelibdir
mv %buildroot%python_sitelibdir_noarch/* \
	%buildroot%python_sitelibdir/
%endif

%if_with python3
pushd ../python3
%python3_install
popd
%if "%python3_sitelibdir_noarch" != "%python3_sitelibdir"
install -d %buildroot%python3_sitelibdir
mv %buildroot%python3_sitelibdir_noarch/* \
	%buildroot%python3_sitelibdir/
%endif
%endif

%files
%doc *.txt
%python_sitelibdir/*
%exclude %python_sitelibdir/*.pth
%exclude %python_sitelibdir/*/*/tests.*

%files tests
%python_sitelibdir/*/*/tests.*

%if_with python3
%files -n python3-module-%oname
%doc *.txt
%python3_sitelibdir/*
%exclude %python3_sitelibdir/*.pth
%exclude %python3_sitelibdir/*/*/tests.*
%exclude %python3_sitelibdir/*/*/*/tests.*

%files -n python3-module-%oname-tests
%python3_sitelibdir/*/*/tests.*
%python3_sitelibdir/*/*/*/tests.*
%endif

%changelog
* Mon Jun 06 2016 Ivan Zakharyaschev <imz@altlinux.org> 1.0.1-alt2.1.1
- (AUTO) subst_x86_64.

* Sun Mar 13 2016 Ivan Zakharyaschev <imz@altlinux.org> 1.0.1-alt2.1
- (NMU) rebuild with rpm-build-python3-0.1.9
  (for common python3/site-packages/ and auto python3.3-ABI dep when needed)

* Fri Jul 25 2014 Eugeny A. Rostovtsev (REAL) <real at altlinux.org> 1.0.1-alt2
- Added module for Python 3

* Wed Dec 28 2011 Eugeny A. Rostovtsev (REAL) <real at altlinux.org> 1.0.1-alt1
- Version 1.0.1

* Thu Oct 20 2011 Vitaly Kuznetsov <vitty@altlinux.ru> 1.0.0-alt2.1
- Rebuild with Python-2.7

* Sun Jun 26 2011 Eugeny A. Rostovtsev (REAL) <real at altlinux.org> 1.0.0-alt2
- Added necessary requirements
- Excluded *.pth

* Fri Jun 03 2011 Eugeny A. Rostovtsev (REAL) <real at altlinux.org> 1.0.0-alt1
- Initial build for Sisyphus

