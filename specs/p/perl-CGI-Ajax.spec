#
#   - CGI::Ajax -
#   This spec file was automatically generated by cpan2rpm [ver: 2.027]
#   (ALT Linux revision)
#   The following arguments were used:
#       CGI::Ajax
#   For more information on cpan2rpm please visit: http://perl.arix.com/
#

%define module CGI-Ajax
%define m_distro CGI-Ajax
%define m_name CGI::Ajax
%define m_author_id BCT
%define _enable_test 1

Name: perl-CGI-Ajax
Version: 0.707
Release: alt1.1

Summary: %m_name - a perl-specific system for writing Asynchronous web applications

License: Artistic
Group: Development/Perl
Url: http://search.cpan.org/dist/CGI-Ajax/

Packager: Michael Bochkaryov <misha@altlinux.ru>

BuildArch: noarch
Source: http://www.cpan.org/authors/id/B/BP/BPEDERSE/CGI-Ajax-0.707.tar.gz

# Automatically added by buildreq on Fri Sep 05 2008 (-bi)
BuildRequires: perl-CGI perl-Class-Accessor perl-devel

%description
CGI::Ajax is an object-oriented module that provides a unique
mechanism for using perl code asynchronously from javascript-
enhanced HTML pages.  CGI::Ajax unburdens the user from having to
write extensive javascript, except for associating an exported
method with a document-defined event (such as onClick, onKeyUp,
etc).  CGI::Ajax also mixes well with HTML containing more complex
javascript.

CGI::Ajax supports methods that return single results or multiple
results to the web page, and supports returning values to multiple
DIV elements on the HTML page.

Using CGI::Ajax, the URL for the HTTP GET/POST request is
automatically generated based on HTML layout and events, and the
page is then dynamically updated with the output from the perl
function.  Additionally, CGI::Ajax supports mapping URL's to a
CGI::Ajax function name, so you can separate your code processing
over multiple scripts.

Other than using the Class::Accessor module to generate CGI::Ajax'
accessor methods, CGI::Ajax is completely self-contained - it
does not require you to install a larger package or a full Content
Management System, etc.

We have added *support* for other CGI handler/decoder modules,
like CGI::Simple or CGI::Minimal, but we can't test these
since we run mod_perl2 only here.  CGI::Ajax checks to see if a
header() method is available to the CGI object, and then uses it.
If method() isn't available, it creates it's own minimal header.

A primary goal of CGI::Ajax is to keep the module streamlined and
maximally flexible.  We are trying to keep the generated javascript
code to a minimum, but still provide users with a variety of
methods for deploying CGI::Ajax. And VERY little user javascript.

%prep
%setup -q -n %m_distro-%version
%build
%perl_vendor_build

%install
%perl_vendor_install

%files
%perl_vendor_privlib/CGI*
%doc Changes LICENSE README scripts Todo

%changelog
* Mon Nov 22 2010 Igor Vlasenko <viy@altlinux.ru> 0.707-alt1.1
- repair after perl 5.12 upgrade using girar-nmu

* Tue Jul 13 2010 Igor Vlasenko <viy@altlinux.ru> 0.707-alt1
- automated CPAN update

* Fri Sep 05 2008 Michael Bochkaryov <misha@altlinux.ru> 0.706-alt1
- 0.706 version
- fix directory ownership violation

* Mon Jul 21 2008 Michael Bochkaryov <misha@altlinux.ru> 0.701-alt1
- first build for ALT Linux Sisyphus

